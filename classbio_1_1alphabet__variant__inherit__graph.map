<map id="bio::alphabet_variant&lt; alternative_types &gt;" name="bio::alphabet_variant&lt; alternative_types &gt;">
<area shape="rect" id="node1" title="A combined alphabet that can hold values of either of its alternatives." alt="" coords="1095,134,1261,175"/>
<area shape="rect" id="node2" href="$interfacebio_1_1writable__alphabet.html" title="Refines bio::alphabet and adds assignability." alt="" coords="861,56,999,83"/>
<area shape="rect" id="node3" href="$interfacebio_1_1alphabet.html" title="The generic alphabet concept that covers most data types used in ranges." alt="" coords="433,5,511,32"/>
<area shape="rect" id="node4" href="$interfacebio_1_1semialphabet.html" title="The basis for bio::alphabet, but requires only rank interface (not char)." alt="" coords="227,32,337,59"/>
<area shape="rect" id="node7" href="$interfacebio_1_1writable__semialphabet.html" title="A refinement of bio::semialphabet that adds assignability." alt="" coords="387,56,557,83"/>
<area shape="rect" id="node5" title=" " alt="" coords="17,7,166,33"/>
<area shape="rect" id="node6" title=" " alt="" coords="5,57,177,84"/>
<area shape="rect" id="node8" href="$interfacebio_1_1trivially__copyable.html" title="A type that satisfies std::is_trivially_copyable_v&lt;t&gt;." alt="" coords="861,107,999,133"/>
<area shape="rect" id="node9" title=" " alt="" coords="417,107,527,133"/>
<area shape="rect" id="node10" href="$interfacebio_1_1standard__layout.html" title="Resolves to std::is_standard_layout_v&lt;t&gt;." alt="" coords="867,157,993,184"/>
<area shape="rect" id="node11" href="$classbio_1_1alphabet__base.html" title=" " alt="" coords="815,209,1045,309"/>
<area shape="rect" id="node12" href="$classbio_1_1alphabet__base.html" title="A CRTP&#45;base that makes defining a custom alphabet easier." alt="" coords="392,231,552,287"/>
</map>
